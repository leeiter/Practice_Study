/*
    Q. 특정 부서에 근무하는 사원의 사원번호와 이름을 emp_test1 테이블에 저장하시오.
    
    > 문제 풀기에 앞서 HR 계정이 어떤 상태인지 확인.(CMD창)
        1. sqlplus / as sysdba 로 SQL 작동.
            -> sysdba 최상위 계정 사용자. 모든 권한을 가지고, 줄 수 있음.
        2. SELECT username, account_status FROM dba_users;
            -> dba에 있는 계정을 username, account_status 칼럼만 보여줌.
        3. SET LINES 500;
            -> 글씨 크기 조정.
        4. 결과 : HR 계정은 EXPIRED & LOCKED 상태.
        5. ALTER USER HR ACCOUNT UNLOCK;
            -> HR 계정 LOCK 상태를 풀어줌.
        6. SELECT username, account_status FROM dba_users;
            -> 다시 확인 해보면 HR 계정이 EXPIRED 상태.
        7. ALTER user HR alter user HR IDENTIFIED BY 0000;
            -> HR 계정 비밀번호 변경.
        8. Conn HR/0000
            -> HR 계정 연결.
        9. SELECT * FROM employees;
            -> employees table 확인.
        10. Oracle Developer 에서 HR 계정 설정 후 진행.
    
    > emp_test1 table을 생성.
        -> employees table의 employee_id, last_name, department_id 칼럼 형식과
            동일하게 생성.
        -> 단, 생성하려는 칼럼과 기존 다름 테이블의 칼럼의 순서가 똑같아야
            해당 칼럼에 맞는 형식으로 생성.
*/
CREATE TABLE emp_test1(empno, ename, deptno)
AS
SELECT employee_id, last_name,department_id
FROM employees;

SET SERVEROUTPUT ON;
SET AUTOPRINT ON;

DECLARE
-- 변수명 : e_invalid_department, TYPE 이 EXCEPTION.
-- 예외처리할 때 사용. try/catch 와 비슷.
e_invalid_department EXCEPTION;
-- := : 대입
-- v_deptno 라는 변수를 생성하는데 employees table의 department_id 칼럼의
-- 데이터 타입을 그대로 받아와서 대입.
v_deptno employees.department_id%type := &v_deptno;
    /*
        CURSOR : 기본적으로 PL/SQL은 하나의 값만 반환을 하는데,
            CURSOR을 이용하면 여러 행(row)을 반환 가능.
            
        1. c_emp_cursor 만들고
        2. i_deptno NUMBER : i_deptno는 v_deptno의 값을 입력 받는 값 타입 지정
            -> NUMBER 타입의 i_deptno를 받아온다.
        3. SELECT employee_id, last_name, department_id
            FROM employees
            WHERE department_id = i_deptno; 를 담고 있다.
        4. emp_record 변수 선언 하고 c_emp_cursor의 ROWTYPE을 담는다.
            -> i_deptno에 담긴 각 row타입을 담아준다.
    */
    CURSOR c_emp_cursor(i_deptno NUMBER) IS
        SELECT employee_id, last_name, department_id
        FROM employees
        WHERE department_id = i_deptno;
        emp_record c_emp_cursor%ROWTYPE;
BEGIN
    -- CURSOR 는 열어주면 꼭 닫아줘야 한다.
    OPEN c_emp_cursor(v_deptno);
    -- for문과 비슷. 반복한다.
    LOOP
        -- c_emp_cursor 안에 있는 데이터를 emp_record에 담는다.
        FETCH c_emp_cursor INTO emp_record;
        -- NOTFOUND가 뜨면 끝.
        EXIT WHEN c_emp_cursor%NOTFOUND;
        -- 찾은 데이터를 emp_test1에 INSERT로 담는다. 
        INSERT INTO emp_test1(empno, ename,deptno)
        VALUES (emp_record.employee_id, emp_record.last_name, emp_record.department_id);  
    -- LOOP 끝.
    END LOOP; 
    -- CURSOR 끝.
    CLOSE  c_emp_cursor;
END;

-- 제대로 데이터가 들어갔는지 확인.
SELECT * FROM emp_test1;